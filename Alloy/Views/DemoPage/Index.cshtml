@model Alloy.Models.ViewModels.DemoPageViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
    @*Steg - Lista med PageData
        1. Skapa statisk html-mockup utan att programmera
        2. Lägg in loop
        3. Gör texter och länkar dynamiska*@
    <nav>
        <ul>
            @foreach (var item in Model.MainMenuList)
            {
                <li>
                    @*<a href="#" class="selected">Sida</a>  - Static Mockup*@
                    @*@Html.ContentLink(item) - Först försöket, gör a-tag men kan inte anpassas*@
                    <a href="@Url.ContentUrl(item.ContentLink)">@item.Name</a>
                </li>
            }
        </ul>
    </nav>

    @*Lista från MenuItem*@

    <nav>
        <ul>
            @foreach (var item in Model.MainMenuListWithItems)
            {
            <li>
                <a href="@Url.ContentUrl(item.Page.ContentLink)">@item.Page.Name</a>
                @if (item.Active){<text> -- Active</text>}
                </li>
            }
        </ul>
    </nav>


    <div>
        <h1 @Html.EditAttributes(m => m.CurrentPage.Name)>@Model.CurrentPage.Name</h1>

        @*Här kommer brödtexten*@
        @Html.PropertyFor(m => m.CurrentPage.MainBody)
    </div>

    <div @Html.EditAttributes(m => m.CurrentPage.IdOfParentPageToList)>
        <h2>@Model.RootPageOfMyListOfPages.Name</h2>

        <h2>@(Model.CurrentPage.IdOfParentPageToList.Get<PageData>().Name)</h2>

        @foreach (var page in Model.MyListOfPages)
        {
            <div class="listResult theme2">
                <h3>
                    @Html.ContentLink(page)
                </h3>
                <p class="date">
                    @page.StartPublish.Value.ToString("yyyy-MM-dd")
                    @*Använd DisplayTemplate for DateTime:*@
                    @Html.DisplayFor(x => page.StartPublish.Value)
                </p>
                @if (!string.IsNullOrWhiteSpace(page["TeaserText"] as string))
                {
                    <p>@page["TeaserText"]</p>
                }

                <hr>
            </div>
        }

        <h2>Search Result</h2>
        <ul>
            @foreach (var page in Model.SearchResult)
            {
                <li>@Html.ContentLink(page)</li>
            }
        </ul>

    </div>
</body>
</html>
